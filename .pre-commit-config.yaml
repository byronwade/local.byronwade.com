# Pre-commit hooks for enterprise code quality
# See https://pre-commit.com for more information

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
        exclude: '\.md$'
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # JavaScript/TypeScript formatting and linting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - '@typescript-eslint/eslint-plugin@6.19.0'
          - '@typescript-eslint/parser@6.19.0'
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@4.6.0
          - eslint-plugin-next@13.5.6
        args: ['--fix']

  # Prettier formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yaml|yml)$
        additional_dependencies:
          - prettier@3.1.0
          - '@trivago/prettier-plugin-sort-imports@4.3.0'
        args: ['--write']

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Git commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML/Kubernetes validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # SQL formatting and validation
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.5
    hooks:
      - id: sqlfluff-lint
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']
        files: \.sql$
      - id: sqlfluff-fix
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']
        files: \.sql$

  # Python scripts validation (if any)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix]
        files: \.py$

  # Custom local hooks
  - repo: local
    hooks:
      # TypeScript type checking
      - id: typescript-check
        name: TypeScript Type Check
        entry: npx tsc --noEmit
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        
      # Package.json validation
      - id: package-json-lint
        name: Package.json Lint
        entry: npx package-json-validator
        language: system
        files: package\.json$
        
      # Security audit
      - id: npm-audit
        name: NPM Security Audit
        entry: npm audit --audit-level=moderate
        language: system
        files: package-lock\.json$
        pass_filenames: false
        
      # Bundle size check
      - id: bundle-size-check
        name: Bundle Size Check
        entry: bash -c 'cd apps/main && npm run build && npx bundlesize'
        language: system
        files: \.(js|jsx|ts|tsx|json)$
        pass_filenames: false
        
      # License header check
      - id: license-header-check
        name: License Header Check
        entry: python3 scripts/check-license-headers.py
        language: system
        files: \.(js|jsx|ts|tsx)$
        
      # API documentation check
      - id: api-docs-check
        name: API Documentation Check
        entry: bash -c 'find app/api -name "*.ts" -exec grep -L "@swagger\|@openapi" {} \; | head -5'
        language: system
        files: app/api/.*\.ts$
        pass_filenames: false
        
      # Environment variables check
      - id: env-vars-check
        name: Environment Variables Check
        entry: python3 scripts/check-env-vars.py
        language: system
        files: \.env\.example$
        
      # Database migration validation
      - id: migration-check
        name: Database Migration Check
        entry: bash -c 'if [[ -n "$(find lib/supabase/migrations -name "*.sql" -newer $(git log -1 --format="%ct" -- lib/supabase/migrations) 2>/dev/null)" ]]; then echo "New migration files detected - ensure they are tested"; fi'
        language: system
        files: lib/supabase/migrations/.*\.sql$
        pass_filenames: false

# Global configuration
default_install_hook_types: [pre-commit, commit-msg, pre-push]
default_stages: [commit]

# Performance optimization
minimum_pre_commit_version: '3.0.0'